{"createdAt":"2025-04-09T19:41:25.137Z","updatedAt":"2025-05-26T20:26:44.000Z","id":"FRs9Q4wSKR7f8Jl7","name":"Chat IA v1.0","active":false,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"=Eres un asistente que responde preguntas  sobre servicios del cliente.\n\nAnalisa los servicios del cliente  {{ $json.contenido_para_ia }} y responde la consulta {{ $('Webhook').item.json.body.consulta }} \n\nNo inventes informacion\nNo entras informacion diferente a servicios\nNo respondas consultas no realizadas\n\nResponde con formato html y puedes agregar emojis de ser necesario.\n\n","options":{"systemMessage":"=Responde solo mensajes en base a los servicios del Cliente\n\nNo inventes informacion, responde solo lo consultado.\n\nResponde en un tono profesional.\n\nResponde unicamente con informacion de los servicios del cliente.","returnIntermediateSteps":true}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[920,-580],"id":"9f89b8f9-727e-422c-99b7-bf0cd13b7186","name":"AI Agent","alwaysOutputData":true},{"parameters":{"model":{"__rl":true,"value":"llama-3.3-70B-Instruct","mode":"list","cachedResultName":"llama-3.3-70B-Instruct"},"options":{"temperature":0.3}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[700,-340],"id":"7e11b38b-c04c-478b-a3df-7189b535cde1","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"lu44hoWfCkZALmQk","name":"Api Sentinel"}}},{"parameters":{"httpMethod":"POST","path":"63f2f3df-96c0-41a3-9fb8-dc5107b3b861","responseMode":"lastNode","options":{"rawBody":true}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[300,-580],"id":"28d82361-d7da-4f5d-ac65-678898c985ea","name":"Webhook","webhookId":"63f2f3df-96c0-41a3-9fb8-dc5107b3b861"},{"parameters":{"jsCode":"// Code Node - Convertir datos a texto plano para el agente IA\nconst services =  $input.first().json.body.services|| [];\n\n// Calcular estadísticas\nconst totalServicios = services.length;\nconst serviciosActivos = services.filter(s => s.status === 'Activo').length;\nconst anchoBandaTotal = services.reduce((sum, s) => sum + (parseFloat(s.bandwidthService) || 0), 0);\nconst serviciosConBanda = services.filter(s => s.bandwidthService && parseFloat(s.bandwidthService) > 0).length;\n\n// Por ubicación\nconst bogotaServicios = services.filter(s => s.cityInstall.toLowerCase().includes('bogotá')).length;\nconst bogotaBanda = services.filter(s => s.cityInstall.toLowerCase().includes('bogotá')).reduce((sum, s) => sum + (parseFloat(s.bandwidthService) || 0), 0);\nconst cholutecaServicios = services.filter(s => s.cityInstall.toLowerCase().includes('choluteca')).length;\nconst cholutecaBanda = services.filter(s => s.cityInstall.toLowerCase().includes('choluteca')).reduce((sum, s) => sum + (parseFloat(s.bandwidthService) || 0), 0);\n\n// Por país\nconst colombiaServicios = services.filter(s => s.countryInstall === 'Colombia').length;\nconst colombiaBanda = services.filter(s => s.countryInstall === 'Colombia').reduce((sum, s) => sum + (parseFloat(s.bandwidthService) || 0), 0);\nconst hondurasServicios = services.filter(s => s.countryInstall === 'Honduras').length;\nconst hondurasBanda = services.filter(s => s.countryInstall === 'Honduras').reduce((sum, s) => sum + (parseFloat(s.bandwidthService) || 0), 0);\n\n// Por tipo\nconst cloudServerCant = services.filter(s => s.productType === 'Cloud Server').length;\nconst internetPremiumCant = services.filter(s => s.productType === 'Internet Premium').length;\nconst resourcePoolCant = services.filter(s => s.productType === 'Cloud Resource Pool').length;\n\n// Crear texto descriptivo completo\nconst textoParaIA = `\nINFORMACIÓN COMPLETA DE SERVICIOS DEL CLIENTE:\n\nRESUMEN GENERAL:\n- Total de servicios: ${totalServicios}\n- Servicios activos: ${serviciosActivos}\n- Ancho de banda total: ${anchoBandaTotal} Mbps\n- Servicios con ancho de banda asignado: ${serviciosConBanda}\n\nDISTRIBUCIÓN POR PAÍS:\n- Colombia: ${colombiaServicios} servicios con ${colombiaBanda} Mbps\n- Honduras: ${hondurasServicios} servicios con ${hondurasBanda} Mbps\n\nDISTRIBUCIÓN POR CIUDAD:\n- Bogotá: ${bogotaServicios} servicios con ${bogotaBanda} Mbps\n- Choluteca: ${cholutecaServicios} servicios con ${cholutecaBanda} Mbps\n\nTIPOS DE SERVICIOS:\n- Cloud Server: ${cloudServerCant} servicios\n- Internet Premium: ${internetPremiumCant} servicios  \n- Cloud Resource Pool: ${resourcePoolCant} servicios\n\nDETALLE DE CADA SERVICIO:\n${services.map((s, i) => \n  `${i+1}. ${s.name}\n     - Código: ${s.code}\n     - Estado: ${s.status}\n     - Tipo: ${s.productType}\n     - Familia: ${s.family}\n     - Ubicación: ${s.cityInstall}, ${s.countryInstall}\n     - Ancho de banda: ${s.bandwidthService || 0} ${s.bandwidthServiceUnit || 'Mbps'}\n     - Dirección: ${s.addressInstall}`\n).join('\\n\\n')}\n\nCon esta información puedes responder preguntas como:\n- ¿Cuántos servicios tengo activos?\n- ¿Cuántos servicios tengo en Bogotá?\n- ¿Cuál es mi ancho de banda total?\n- ¿Qué tipos de servicios tengo?\n- ¿En qué países tengo servicios?\n`;\n\n// Retornar como texto plano\nreturn [{\n  json: {\n    contenido_para_ia: textoParaIA,\n    // También incluir datos estructurados por si se necesitan\n    datos_numericos: {\n      total_servicios: totalServicios,\n      servicios_activos: serviciosActivos,\n      ancho_banda_total: anchoBandaTotal,\n      bogota_servicios: bogotaServicios,\n      colombia_servicios: colombiaServicios\n    }\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[620,-580],"id":"33766197-ecea-46c6-b742-ee011dfb58cd","name":"Code"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Webhook').item.json.body.userid }}{{ $execution.id }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[1020,-360],"id":"b76e64e2-ec2c-498f-a137-7b2f4c2b2845","name":"Simple Memory"}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Webhook":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"492ddc1f-84b2-46b2-9e28-4682e59b00bf","triggerCount":1,"tags":[]}