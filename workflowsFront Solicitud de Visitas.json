{"createdAt":"2025-06-21T16:09:12.455Z","updatedAt":"2025-06-21T16:40:54.000Z","id":"iKXwCgvfcrBS1ZcC","name":"Front Solicitud de Visitas","active":true,"isArchived":false,"nodes":[{"parameters":{"path":"front_request","responseMode":"responseNode","options":{"allowedOrigins":"*"}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-80,-40],"id":"69e674cd-b085-41c0-b0fe-a323677354aa","name":"Webhook","webhookId":"894b0a7a-cb0f-4009-8525-43642884c9ca"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"es\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Formulario de Manos Remotas</title>\n\n  <style>\n    body {\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      background-color: #f0f2f5;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      justify-content: center;\n      align-items: flex-start;\n      min-height: 100vh;\n    }\n\n    .container {\n      background-color: #ffffff;\n      border-radius: 12px;\n      box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);\n      padding: 30px;\n      max-width: 700px;\n      margin: 20px auto;\n    }\n\n    /* Contenedor para el logo y el t√≠tulo principal */\n    .header-logo-title {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-bottom: 30px;\n      gap: 20px;\n    }\n\n    .form-logo {\n      height: 60px;\n      width: auto;\n      box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);\n      border-radius: 5px;\n      order: 2;\n    }\n\n    h1 {\n      color: #4A90E2;\n      text-align: left;\n      margin: 0;\n      font-size: 32px;\n      white-space: nowrap;\n      background: linear-gradient(to right, #4A90E2, #63B8EE);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      flex-grow: 1;\n      order: 1;\n    }\n\n    .section-title {\n      color: #4A90E2;\n      border-bottom: 1px solid #eee;\n      padding-bottom: 10px;\n      margin-top: 30px;\n      margin-bottom: 20px;\n      font-size: 22px;\n      font-weight: bold;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n\n    .form-group {\n      margin-bottom: 18px;\n      position: relative;\n    }\n\n    .form-row {\n      display: flex;\n      gap: 20px;\n      margin-bottom: 18px;\n      flex-wrap: wrap;\n    }\n\n    .form-row .half-width {\n      flex: 1;\n      min-width: 0;\n      margin-bottom: 0;\n    }\n\n    .form-row.triple-width .third-width {\n      flex: 1;\n      min-width: 0;\n      margin-bottom: 0;\n    }\n\n    .form-group label {\n      display: flex;\n      align-items: center;\n      gap: 5px;\n      margin-bottom: 8px;\n      color: #333;\n      font-weight: bold;\n      font-size: 15px;\n    }\n\n    .form-group input[type=\"text\"],\n    .form-group input[type=\"tel\"],\n    .form-group select,\n    .form-group textarea {\n      width: calc(100% - 20px);\n      padding: 12px;\n      border: 1px solid #ddd;\n      border-radius: 8px;\n      font-size: 16px;\n      color: #333;\n      box-sizing: border-box;\n    }\n\n    .form-group input:focus,\n    .form-group select:focus,\n    .form-group textarea:focus {\n      border-color: #4A90E2;\n      outline: none;\n      box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.2);\n    }\n\n    /* Estilos espec√≠ficos para los selectores de fecha y hora */\n    .datetime-group {\n      display: flex;\n      gap: 10px;\n      align-items: center;\n    }\n\n    .datetime-group select {\n      width: auto;\n      flex-grow: 1;\n      min-width: 60px;\n    }\n\n    .form-group textarea {\n      resize: vertical;\n      min-height: 80px;\n    }\n\n    button[type=\"submit\"] {\n      background-color: #4A90E2;\n      color: white;\n      padding: 14px 25px;\n      border: none;\n      border-radius: 8px;\n      font-size: 18px;\n      font-weight: bold;\n      cursor: pointer;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 8px;\n      width: 100%;\n      margin-top: 30px;\n      transition: background-color 0.3s ease;\n    }\n\n    button[type=\"submit\"]:hover {\n      background-color: #357ABD;\n    }\n\n    .error-message {\n      color: #d9534f;\n      font-size: 13px;\n      margin-top: 5px;\n      display: none;\n    }\n\n    /* Aseguramos que la pista AM/PM se alinee al lado de los selectores de hora */\n    .am-pm-hint {\n      font-size: 0.9em;\n      color: #a0a0a0;\n      margin-left: 5px;\n      /* Espacio m√°s ajustado */\n      white-space: nowrap;\n      /* Evita que se rompa */\n    }\n  </style>\n</head>\n\n<body>\n  <div class=\"container\">\n    <div class=\"header-logo-title\">\n      <img src=\"https://github.com/aifx-dev/repo-images/blob/main/Logo_aifx_Azul.png?raw=true\" alt=\"Logo aifx\"\n        class=\"form-logo\">\n      <h1>Solicitud de Manos Remotas</h1>\n    </div>\n\n    <form id=\"remoteHandsForm\">\n      <div class=\"section-title\">‚ú® Detalles de la Solicitud</div>\n      <div class=\"form-group\">\n        <label for=\"tipoSid\">Tipo de Gesti√≥n: üõ†Ô∏è</label>\n        <select id=\"tipoSid\" name=\"mantenimiento_aprovisionamiento\" required>\n          <option value=\"\">Seleccione una opci√≥n</option>\n          <option value=\"IMPLEMENTACION\">Mantenimiento</option>\n          <option value=\"MANTENIMIENTO\">Aprovisionamiento</option>\n        </select>\n        <div class=\"error-message\" id=\"errorTipoSid\"></div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group half-width\">\n          <label for=\"ticketRelacionado\">Ticket Relacionado: üé´</label>\n          <input type=\"text\" id=\"ticketRelacionado\" name=\"ticket\" placeholder=\"Ej: TICKET-12345\" required\n            pattern=\"[A-Z0-9-]+\">\n          <div class=\"error-message\" id=\"errorTicketRelacionado\"></div>\n        </div>\n        <div class=\"form-group half-width\">\n          <label for=\"sid\">SID: üÜî</label>\n          <input type=\"text\" id=\"sid\" name=\"sid\" placeholder=\"Ej: SID-PROD-001\" required pattern=\"[A-Z0-9-]+\">\n          <div class=\"error-message\" id=\"errorSid\"></div>\n        </div>\n      </div>\n\n      <div class=\"section-title\">üóìÔ∏è Detalles de la Cita</div>\n      <div class=\"form-row\">\n        <div class=\"form-group half-width\">\n          <label>Fecha: üìÖ</label>\n          <div class=\"datetime-group\">\n            <select id=\"fechaDia\" name=\"fecha_dia\" required>\n            </select>\n            <select id=\"fechaMes\" name=\"fecha_mes\" required>\n            </select>\n            <select id=\"fechaAnio\" name=\"fecha_anio\" required>\n            </select>\n          </div>\n          <div class=\"error-message\" id=\"errorFechaCita\"></div>\n        </div>\n        <div class=\"form-group half-width\">\n          <label>Hora: ‚è∞</label>\n          <div class=\"datetime-group\">\n            <select id=\"horaHora\" name=\"hora_hora\" required>\n            </select>\n            <span>:</span> <select id=\"horaMinuto\" name=\"hora_minuto\" required>\n            </select>\n            <span id=\"horaAmPmDisplay\" class=\"am-pm-hint\"></span>\n          </div>\n          <div class=\"error-message\" id=\"errorHoraCita\"></div>\n        </div>\n      </div>\n\n      <div class=\"section-title\">üë§ Informaci√≥n del Cliente</div>\n      <div class=\"form-group\">\n        <label for=\"nombreCliente\">Nombre del Cliente: üè¢</label>\n        <input type=\"text\" id=\"nombreCliente\" name=\"cliente\" placeholder=\"Ej: Empresa XYZ\" required\n          pattern=\"[A-Za-z0-9\\s.,√±√ë]+\" title=\"Solo letras, n√∫meros, espacios, puntos y comas.\">\n        <div class=\"error-message\" id=\"errorNombreCliente\"></div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"contactoCliente\">Contacto en Cliente: ü§ù</label>\n        <input type=\"text\" id=\"contactoCliente\" name=\"nombre_contacto_cliente\" placeholder=\"Ej: Juan P√©rez\" required\n          pattern=\"[A-Za-z\\s√±√ë]+\" title=\"Solo letras y espacios.\">\n        <div class=\"error-message\" id=\"errorContactoCliente\"></div>\n      </div>\n\n      <div class=\"form-row triple-width\">\n        <div class=\"form-group third-width\">\n          <label for=\"pais\">Pa√≠s: üåé</label>\n          <input type=\"text\" id=\"pais\" name=\"pais\" placeholder=\"Ej: Colombia\" required pattern=\"[A-Za-z\\s√±√ë]+\"\n            title=\"Solo letras y espacios.\">\n          <div class=\"error-message\" id=\"errorPais\"></div>\n        </div>\n        <div class=\"form-group third-width\">\n          <label for=\"ciudad\">Ciudad: üèôÔ∏è</label>\n          <input type=\"text\" id=\"ciudad\" name=\"ciudad\" placeholder=\"Ej: Bogot√°\" required pattern=\"[A-Za-z\\s√±√ë]+\"\n            title=\"Solo letras y espacios.\">\n          <div class=\"error-message\" id=\"errorCiudad\"></div>\n        </div>\n        <div class=\"form-group third-width\">\n          <label for=\"telefonoCliente\">Tel√©fono: üìû</label>\n          <input type=\"tel\" id=\"telefonoCliente\" name=\"telefono_cliente\" placeholder=\"Ej: +57 300 123 4567\" required\n            pattern=\"[0-9+\\s()-]+\">\n          <div class=\"error-message\" id=\"errorTelefonoCliente\"></div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"direccionCliente\">Direcci√≥n: üìç</label>\n        <textarea id=\"direccionCliente\" name=\"direccion_cliente\" rows=\"3\" placeholder=\"Ej: Calle 123 # 45-67\"\n          required></textarea>\n        <div class=\"error-message\" id=\"errorDireccionCliente\"></div>\n      </div>\n\n      <div class=\"section-title\">üì¶ Equipos y Log√≠stica</div>\n      <div class=\"form-group\">\n        <label for=\"equiposLlevar\">Equipos a Llevar al Cliente: üéí</label>\n        <textarea id=\"equiposLlevar\" name=\"equipos_llevar_cliente\" rows=\"3\"\n          placeholder=\"Ej: Router Cisco, Servidor Dell\" required></textarea>\n        <div class=\"error-message\" id=\"errorEquiposLlevar\"></div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group half-width\">\n          <label for=\"rqEquipos\">RQ de Equipos: üìù</label>\n          <input type=\"text\" id=\"rqEquipos\" name=\"rq_equipos\" placeholder=\"Ej: RQ-2025-001\" pattern=\"[A-Z0-9-]*\">\n          <div class=\"error-message\" id=\"errorRqEquipos\"></div>\n        </div>\n        <div class=\"form-group half-width\">\n          <label for=\"guiaEnvio\">Gu√≠a de Env√≠o: üöö</label>\n          <input type=\"text\" id=\"guiaEnvio\" name=\"guia_envio_equipos\" placeholder=\"Ej: GUIA-XYZ-789\"\n            pattern=\"[A-Z0-9-]*\">\n          <div class=\"error-message\" id=\"errorGuiaEnvio\"></div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lugarRecogida\">Lugar de Recogida de Equipo: üì¶</label>\n        <textarea id=\"lugarRecogida\" name=\"donde_recoger_equipo\" rows=\"2\"\n          placeholder=\"Ej: Almac√©n Principal, Oficina 305\"></textarea>\n        <div class=\"error-message\" id=\"errorLugarRecogida\"></div>\n      </div>\n\n      <div class=\"section-title\">üë®‚Äçüíª Equipo de Trabajo</div>\n      <div class=\"form-group\">\n        <label for=\"ingenieroAprovisionamiento\">Ingeniero de Aprovisionamiento: ‚öôÔ∏è</label>\n        <input type=\"text\" id=\"ingenieroAprovisionamiento\" name=\"ingeniero_aprovisionamiento\"\n          placeholder=\"Ej: Ana G√≥mez\" required pattern=\"[A-Za-z\\s√±√ë]+\" title=\"Solo letras y espacios.\">\n        <div class=\"error-message\" id=\"errorIngenieroAprovisionamiento\"></div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"gerenteProyecto\">Gerente de Proyecto: üìä</label>\n        <input type=\"text\" id=\"gerenteProyecto\" name=\"gerente_proyecto\" placeholder=\"Ej: Carlos Ram√≠rez\" required\n          pattern=\"[A-Za-z\\s√±√ë]+\" title=\"Solo letras y espacios.\">\n        <div class=\"error-message\" id=\"errorGerenteProyecto\"></div>\n      </div>\n\n      <div class=\"section-title\">üìù Observaciones</div>\n      <div class=\"form-group\">\n        <label for=\"observaciones\">Observaciones: üí¨</label>\n        <textarea id=\"observaciones\" name=\"observaciones\" rows=\"5\"\n          placeholder=\"Cualquier informaci√≥n adicional relevante.\"></textarea>\n        <div class=\"error-message\" id=\"errorObservaciones\"></div>\n      </div>\n\n      <button type=\"submit\">Enviar Solicitud ‚ú®</button>\n    </form>\n  </div>\n\n  <script>\n    document.addEventListener('DOMContentLoaded', function () {\n      const form = document.getElementById('remoteHandsForm');\n\n      // --- Elementos de Fecha ---\n      const fechaDiaSelect = document.getElementById('fechaDia');\n      const fechaMesSelect = document.getElementById('fechaMes');\n      const fechaAnioSelect = document.getElementById('fechaAnio');\n\n      // --- Elementos de Hora ---\n      const horaHoraSelect = document.getElementById('horaHora');\n      const horaMinutoSelect = document.getElementById('horaMinuto');\n      const horaAmPmDisplay = document.getElementById('horaAmPmDisplay'); // Ahora es un span, no un select\n\n      // Funci√≥n para rellenar opciones de los selectores de hora\n      function populateTimeSelectors() {\n        // Horas (00-23 para formato 24H)\n        for (let i = 0; i <= 23; i++) {\n          const option = document.createElement('option');\n          option.value = String(i).padStart(2, '0');\n          option.textContent = String(i).padStart(2, '0');\n          horaHoraSelect.appendChild(option);\n        }\n\n        // Minutos (00, 15, 30, 45)\n        for (let i = 0; i < 60; i += 15) { // Incremento de 15 minutos\n          const option = document.createElement('option');\n          option.value = String(i).padStart(2, '0');\n          option.textContent = String(i).padStart(2, '0');\n          horaMinutoSelect.appendChild(option);\n        }\n      }\n\n      // Funci√≥n para actualizar la visualizaci√≥n AM/PM\n      function updateAmPmDisplay() {\n        const selectedHour24 = parseInt(horaHoraSelect.value, 10);\n        const selectedMinute = parseInt(horaMinutoSelect.value, 10);\n\n        // Comprobamos que ambos selectores tengan un valor v√°lido antes de intentar la conversi√≥n\n        if (!isNaN(selectedHour24) && !isNaN(selectedMinute) && horaHoraSelect.value !== \"\" && horaMinutoSelect.value !== \"\") {\n          const tempDate = new Date();\n          tempDate.setHours(selectedHour24, selectedMinute, 0, 0);\n\n          // Formatear a AM/PM usando la configuraci√≥n regional, forzando 12h\n          const ampmTime = tempDate.toLocaleTimeString('es-ES', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: true\n          });\n          horaAmPmDisplay.textContent = `(${ampmTime})`;\n        } else {\n          horaAmPmDisplay.textContent = ''; // Limpiar si no hay selecci√≥n v√°lida\n        }\n      }\n\n      // A√±adir listeners para actualizar el display AM/PM cuando cambian las horas o minutos\n      horaHoraSelect.addEventListener('change', updateAmPmDisplay);\n      horaMinutoSelect.addEventListener('change', updateAmPmDisplay);\n\n      // Funci√≥n para rellenar opciones de los selectores de fecha\n      function populateDateSelectors() {\n        const today = new Date();\n        const currentYear = today.getFullYear();\n        const currentMonth = today.getMonth(); // 0-11\n        const currentDay = today.getDate();\n\n        // D√≠as (1-31)\n        for (let i = 1; i <= 31; i++) {\n          const option = document.createElement('option');\n          option.value = String(i).padStart(2, '0');\n          option.textContent = String(i).padStart(2, '0');\n          fechaDiaSelect.appendChild(option);\n        }\n\n        // Meses (01-12)\n        const monthNames = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\n        for (let i = 0; i < 12; i++) {\n          const option = document.createElement('option');\n          option.value = String(i + 1).padStart(2, '0');\n          option.textContent = monthNames[i];\n          fechaMesSelect.appendChild(option);\n        }\n\n        // A√±os (actual y los pr√≥ximos 5 a√±os)\n        for (let i = currentYear; i <= currentYear + 5; i++) {\n          const option = document.createElement('option');\n          option.value = String(i);\n          option.textContent = String(i);\n          fechaAnioSelect.appendChild(option);\n        }\n\n        // Establecer la fecha actual por defecto\n        fechaDiaSelect.value = String(currentDay).padStart(2, '0');\n        fechaMesSelect.value = String(currentMonth + 1).padStart(2, '0');\n        fechaAnioSelect.value = String(currentYear);\n      }\n\n      // Llamar a las funciones para rellenar los selectores al cargar\n      populateTimeSelectors();\n      populateDateSelectors();\n      // Establecer la hora por defecto (por ejemplo, 00:00) y actualizar la visualizaci√≥n AM/PM\n      horaHoraSelect.value = \"00\"; // Establece el valor inicial para la hora\n      horaMinutoSelect.value = \"00\"; // Establece el valor inicial para el minuto\n      updateAmPmDisplay(); // Llama esto una vez al cargar para mostrar el valor inicial\n\n      form.addEventListener('submit', async function (event) {\n        event.preventDefault();\n\n        if (validateForm()) {\n          const data = {};\n\n          // Recolectar datos de campos directos (inputs, textareas, selects)\n          const formElements = form.elements;\n          for (let i = 0; i < formElements.length; i++) {\n            const element = formElements[i];\n            // Excluir los selectores individuales de fecha y hora que no son parte del JSON final directo\n            // Solo procesamos los que tienen un 'name' y no son parte de los selectores de fecha/hora desglosados\n            if (element.name && element.id !== 'fechaDia' && element.id !== 'fechaMes' && element.id !== 'fechaAnio' &&\n              element.id !== 'horaHora' && element.id !== 'horaMinuto') {\n              data[element.name] = element.value.toUpperCase(); // Convertir a may√∫sculas\n            }\n          }\n\n          // --- Construir la fecha en formato AAAA-MM-DD ---\n          const dia = fechaDiaSelect.value;\n          const mes = fechaMesSelect.value;\n          const anio = fechaAnioSelect.value;\n          data['fecha'] = `${anio}-${mes}-${dia}`;\n\n          // --- Construir la hora en formato HH:MM (24H) ---\n          const hora = horaHoraSelect.value; // Ya est√° en 24H (00-23)\n          const minuto = horaMinutoSelect.value; // Ya est√° en pasos de 15 mins\n          data['hora'] = `${hora}:${minuto}`;\n\n\n          // --- Enviar los datos en formato JSON a un webhook ---\n          const webhookUrl = 'https://n8n.aifx.com.co/webhook/insert_request'; // ¬°¬°¬°IMPORTANTE: REEMPLAZA ESTA URL CON LA DE TU WEBHOOK!!!\n\n          try {\n            const response = await fetch(webhookUrl, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(data),\n            });\n\n            if (response.ok) {\n              console.log('Formulario enviado con √©xito a webhook:', data);\n              alert('¬°Solicitud enviada con √©xito! ‚úÖ');\n              form.reset();\n              // Resetear selectores de fecha/hora a sus valores por defecto (hoy, 00:00)\n              populateDateSelectors();\n              horaHoraSelect.value = \"00\";\n              horaMinutoSelect.value = \"00\";\n              updateAmPmDisplay(); // Actualizar la visualizaci√≥n AM/PM despu√©s del reset\n            } else {\n              const errorText = await response.text();\n              console.error('Error al enviar el formulario al webhook:', response.status, response.statusText, errorText);\n              alert('Hubo un error al enviar la solicitud. Por favor, int√©ntalo de nuevo. ‚ùå');\n            }\n          } catch (error) {\n            console.error('Error de red o CORS al enviar el formulario:', error);\n            alert('No se pudo conectar al servidor. Verifica tu conexi√≥n o intenta m√°s tarde. üåê');\n          }\n        }\n      });\n\n      // --- Funci√≥n de Validaci√≥n ---\n      function validateForm() {\n        let isValid = true;\n\n        document.querySelectorAll('.error-message').forEach(el => el.style.display = 'none');\n\n        // Validar selectores de fecha\n        if (!fechaDiaSelect.value || !fechaMesSelect.value || !fechaAnioSelect.value) {\n          displayError('errorFechaCita', 'Debe seleccionar una fecha completa.');\n          isValid = false;\n        } else {\n          const selectedDate = new Date(parseInt(fechaAnioSelect.value), parseInt(fechaMesSelect.value) - 1, parseInt(fechaDiaSelect.value));\n          const today = new Date();\n          today.setHours(0, 0, 0, 0); // Para comparar solo la fecha\n          if (selectedDate < today) {\n            displayError('errorFechaCita', 'La fecha no puede ser anterior a hoy.');\n            isValid = false;\n          }\n        }\n\n        // Validar selectores de hora\n        if (!horaHoraSelect.value || !horaMinutoSelect.value) {\n          displayError('errorHoraCita', 'Debe seleccionar una hora completa.');\n          isValid = false;\n        }\n\n        // --- El resto de tus validaciones originales (mantenerlas) ---\n        const tipoSid = document.getElementById('tipoSid');\n        if (!tipoSid.value) {\n          displayError('errorTipoSid', 'Debe seleccionar un Tipo de Gesti√≥n.');\n          isValid = false;\n        }\n\n        const ticketRelacionado = document.getElementById('ticketRelacionado');\n        if (!ticketRelacionado.value.trim()) {\n          displayError('errorTicketRelacionado', 'El Ticket Relacionado es obligatorio.');\n          isValid = false;\n        } else if (!/^[A-Z0-9-]+$/.test(ticketRelacionado.value.trim())) {\n          displayError('errorTicketRelacionado', 'Formato inv√°lido. Solo letras may√∫sculas, n√∫meros y guiones.');\n          isValid = false;\n        }\n\n        const sid = document.getElementById('sid');\n        if (!sid.value.trim()) {\n          displayError('errorSid', 'El SID es obligatorio.');\n          isValid = false;\n        } else if (!/^[A-Z0-9-]+$/.test(sid.value.trim())) {\n          displayError('errorSid', 'Formato inv√°lido. Solo letras may√∫sculas, n√∫meros y guiones.');\n          isValid = false;\n        }\n\n        const nombreCliente = document.getElementById('nombreCliente');\n        if (!nombreCliente.value.trim()) {\n          displayError('errorNombreCliente', 'El Nombre del Cliente es obligatorio.');\n          isValid = false;\n        } else if (!/^[A-Za-z0-9\\s.,√±√ë]+$/.test(nombreCliente.value.trim())) {\n          displayError('errorNombreCliente', 'Formato inv√°lido. Solo letras, n√∫meros, espacios, puntos y comas.');\n          isValid = false;\n        }\n\n        const contactoCliente = document.getElementById('contactoCliente');\n        if (!contactoCliente.value.trim()) {\n          displayError('errorContactoCliente', 'El Contacto en Cliente es obligatorio.');\n          isValid = false;\n        } else if (!/^[A-Za-z\\s√±√ë]+$/.test(contactoCliente.value.trim())) {\n          displayError('errorContactoCliente', 'Formato inv√°lido. Solo letras y espacios.');\n          isValid = false;\n        }\n\n        const pais = document.getElementById('pais');\n        if (!pais.value.trim()) {\n          displayError('errorPais', 'El Pa√≠s es obligatorio.');\n          isValid = false;\n        } else if (!/^[A-Za-z\\s√±√ë]+$/.test(pais.value.trim())) {\n          displayError('errorPais', 'Formato inv√°lido. Solo letras y espacios.');\n          isValid = false;\n        }\n\n        const ciudad = document.getElementById('ciudad');\n        if (!ciudad.value.trim()) {\n          displayError('errorCiudad', 'La Ciudad es obligatoria.');\n          isValid = false;\n        } else if (!/^[A-Za-z\\s√±√ë]+$/.test(ciudad.value.trim())) {\n          displayError('errorCiudad', 'Formato inv√°lido. Solo letras y espacios.');\n          isValid = false;\n        }\n\n        const telefonoCliente = document.getElementById('telefonoCliente');\n        if (!telefonoCliente.value.trim()) {\n          displayError('errorTelefonoCliente', 'El Tel√©fono del Cliente es obligatorio.');\n          isValid = false;\n        } else if (!/^[0-9+\\s()-]+$/.test(telefonoCliente.value.trim())) {\n          displayError('errorTelefonoCliente', 'Formato inv√°lido. Solo n√∫meros, +, espacios, ( ) y -.');\n          isValid = false;\n        }\n\n        const direccionCliente = document.getElementById('direccionCliente');\n        if (!direccionCliente.value.trim()) {\n          displayError('errorDireccionCliente', 'La Direcci√≥n es obligatoria.');\n          isValid = false;\n        }\n\n        const equiposLlevar = document.getElementById('equiposLlevar');\n        if (!equiposLlevar.value.trim()) {\n          displayError('errorEquiposLlevar', 'Debe especificar los equipos a llevar.');\n          isValid = false;\n        }\n\n        const rqEquipos = document.getElementById('rqEquipos');\n        if (rqEquipos.value.trim() && !/^[A-Z0-9-]+$/.test(rqEquipos.value.trim())) {\n          displayError('errorRqEquipos', 'Formato inv√°lido. Solo letras may√∫sculas, n√∫meros y guiones.');\n          isValid = false;\n        }\n\n        const guiaEnvio = document.getElementById('guiaEnvio');\n        if (guiaEnvio.value.trim() && !/^[A-Z0-9-]+$/.test(guiaEnvio.value.trim())) {\n          displayError('errorGuiaEnvio', 'Formato inv√°lido. Solo letras may√∫sculas, n√∫meros y guiones.');\n          isValid = false;\n        }\n\n        const ingenieroAprovisionamiento = document.getElementById('ingenieroAprovisionamiento');\n        if (!ingenieroAprovisionamiento.value.trim()) {\n          displayError('errorIngenieroAprovisionamiento', 'El Ingeniero de Aprovisionamiento es obligatorio.');\n          isValid = false;\n        } else if (!/^[A-Za-z\\s√±√ë]+$/.test(ingenieroAprovisionamiento.value.trim())) {\n          displayError('errorIngenieroAprovisionamiento', 'Formato inv√°lido. Solo letras y espacios.');\n          isValid = false;\n        }\n\n        const gerenteProyecto = document.getElementById('gerenteProyecto');\n        if (!gerenteProyecto.value.trim()) {\n          displayError('errorGerenteProyecto', 'El Gerente de Proyecto es obligatorio.');\n          isValid = false;\n        } else if (!/^[A-Za-z\\s√±√ë]+$/.test(gerenteProyecto.value.trim())) {\n          displayError('errorGerenteProyecto', 'Formato inv√°lido. Solo letras y espacios.');\n          isValid = false;\n        }\n\n        return isValid;\n      }\n\n      function displayError(elementId, message) {\n        const errorElement = document.getElementById(elementId);\n        errorElement.textContent = message;\n        errorElement.style.display = 'block';\n      }\n    });\n  </script>\n</body>\n\n</html>"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[120,-40],"id":"3ad6ba91-31d8-48cc-9dde-a8e54a95dc07","name":"HTML","alwaysOutputData":true},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[320,-40],"id":"91cbb65c-aecb-4ea0-a6b6-4fd496db4b37","name":"Respond to Webhook"}],"connections":{"Webhook":{"main":[[{"node":"HTML","type":"main","index":0}]]},"HTML":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Respond to Webhook":{"main":[[]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"b118f44b-f738-4cfc-8071-b58416919fec","triggerCount":1,"tags":[]}